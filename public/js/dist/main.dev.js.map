{"version":3,"sources":["main.js"],"names":["chatForm","document","getElementById","chatMessages","querySelector","roomName","userList","Qs","parse","location","search","ignoreQueryPrefix","username","room","socket","io","emit","on","users","outputRoomName","outputUsers","message","console","log","outputMessage","scrollTop","scrollHeight","addEventListener","e","preventDefault","msg","target","elements","value","trim","focus","div","createElement","classList","add","p","innerText","innerHTML","time","appendChild","para","text","forEach","user","li","leaveRoom","confirm","window"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAjB;AACA,IAAMC,YAAY,GAAGF,QAAQ,CAACG,aAAT,CAAuB,gBAAvB,CAArB;AACA,IAAMC,QAAQ,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAjB;AACA,IAAMI,QAAQ,GAAGL,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAjB,C,CAEA;;gBAC2BK,EAAE,CAACC,KAAH,CAASC,QAAQ,CAACC,MAAlB,EAA0B;AACnDC,EAAAA,iBAAiB,EAAE;AADgC,CAA1B,C;IAAnBC,Q,aAAAA,Q;IAAUC,I,aAAAA,I;;AAIlB,IAAMC,MAAM,GAAGC,EAAE,EAAjB,C,CAEA;;AACAD,MAAM,CAACE,IAAP,CAAY,UAAZ,EAAwB;AAAEJ,EAAAA,QAAQ,EAARA,QAAF;AAAYC,EAAAA,IAAI,EAAJA;AAAZ,CAAxB,E,CAEA;;AACAC,MAAM,CAACG,EAAP,CAAU,WAAV,EAAuB,gBAAqB;AAAA,MAAlBJ,IAAkB,QAAlBA,IAAkB;AAAA,MAAZK,KAAY,QAAZA,KAAY;AAC1CC,EAAAA,cAAc,CAACN,IAAD,CAAd;AACAO,EAAAA,WAAW,CAACF,KAAD,CAAX;AACD,CAHD,E,CAKA;;AACAJ,MAAM,CAACG,EAAP,CAAU,SAAV,EAAqB,UAACI,OAAD,EAAa;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAG,EAAAA,aAAa,CAACH,OAAD,CAAb,CAFgC,CAIhC;;AACAlB,EAAAA,YAAY,CAACsB,SAAb,GAAyBtB,YAAY,CAACuB,YAAtC;AACD,CAND,E,CAQA;;AACA1B,QAAQ,CAAC2B,gBAAT,CAA0B,QAA1B,EAAoC,UAACC,CAAD,EAAO;AACzCA,EAAAA,CAAC,CAACC,cAAF,GADyC,CAGzC;;AACA,MAAIC,GAAG,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,GAAlB,CAAsBG,KAAhC;AAEAH,EAAAA,GAAG,GAAGA,GAAG,CAACI,IAAJ,EAAN;;AAEA,MAAI,CAACJ,GAAL,EAAU;AACR,WAAO,KAAP;AACD,GAVwC,CAYzC;;;AACAhB,EAAAA,MAAM,CAACE,IAAP,CAAY,aAAZ,EAA2Bc,GAA3B,EAbyC,CAezC;;AACAF,EAAAA,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,GAAlB,CAAsBG,KAAtB,GAA8B,EAA9B;AACAL,EAAAA,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,GAAlB,CAAsBK,KAAtB;AACD,CAlBD,E,CAoBA;;AACA,SAASX,aAAT,CAAuBH,OAAvB,EAAgC;AAC9B,MAAMe,GAAG,GAAGnC,QAAQ,CAACoC,aAAT,CAAuB,KAAvB,CAAZ;AACAD,EAAAA,GAAG,CAACE,SAAJ,CAAcC,GAAd,CAAkB,SAAlB;AACA,MAAMC,CAAC,GAAGvC,QAAQ,CAACoC,aAAT,CAAuB,GAAvB,CAAV;AACAG,EAAAA,CAAC,CAACF,SAAF,CAAYC,GAAZ,CAAgB,MAAhB;AACAC,EAAAA,CAAC,CAACC,SAAF,GAAcpB,OAAO,CAACT,QAAtB;AACA4B,EAAAA,CAAC,CAACE,SAAF,oBAAwBrB,OAAO,CAACsB,IAAhC;AACAP,EAAAA,GAAG,CAACQ,WAAJ,CAAgBJ,CAAhB;AACA,MAAMK,IAAI,GAAG5C,QAAQ,CAACoC,aAAT,CAAuB,GAAvB,CAAb;AACAQ,EAAAA,IAAI,CAACP,SAAL,CAAeC,GAAf,CAAmB,MAAnB;AACAM,EAAAA,IAAI,CAACJ,SAAL,GAAiBpB,OAAO,CAACyB,IAAzB;AACAV,EAAAA,GAAG,CAACQ,WAAJ,CAAgBC,IAAhB;AACA5C,EAAAA,QAAQ,CAACG,aAAT,CAAuB,gBAAvB,EAAyCwC,WAAzC,CAAqDR,GAArD;AACD,C,CAED;;;AACA,SAASjB,cAAT,CAAwBN,IAAxB,EAA8B;AAC5BR,EAAAA,QAAQ,CAACoC,SAAT,GAAqB5B,IAArB;AACD,C,CAED;;;AACA,SAASO,WAAT,CAAqBF,KAArB,EAA4B;AAC1BZ,EAAAA,QAAQ,CAACoC,SAAT,GAAqB,EAArB;AACAxB,EAAAA,KAAK,CAAC6B,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,QAAMC,EAAE,GAAGhD,QAAQ,CAACoC,aAAT,CAAuB,IAAvB,CAAX;AACAY,IAAAA,EAAE,CAACR,SAAH,GAAeO,IAAI,CAACpC,QAApB;AACAN,IAAAA,QAAQ,CAACsC,WAAT,CAAqBK,EAArB;AACD,GAJD;AAKD,C,CAED;;;AACAhD,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCyB,gBAArC,CAAsD,OAAtD,EAA+D,YAAM;AACnE,MAAMuB,SAAS,GAAGC,OAAO,CAAC,6BAAD,CAAzB;;AACA,MAAID,SAAJ,EAAe;AACbE,IAAAA,MAAM,CAAC3C,QAAP,GAAkB,eAAlB;AACD,GAFD,MAEO,CACN;AACF,CAND","sourcesContent":["const chatForm = document.getElementById('chat-form');\r\nconst chatMessages = document.querySelector('.chat-messages');\r\nconst roomName = document.getElementById('room-name');\r\nconst userList = document.getElementById('users');\r\n\r\n// Get username and room from URL\r\nconst { username, room } = Qs.parse(location.search, {\r\n  ignoreQueryPrefix: true,\r\n});\r\n\r\nconst socket = io();\r\n\r\n// Join chatroom\r\nsocket.emit('joinRoom', { username, room });\r\n\r\n// Get room and users\r\nsocket.on('roomUsers', ({ room, users }) => {\r\n  outputRoomName(room);\r\n  outputUsers(users);\r\n});\r\n\r\n// Message from server\r\nsocket.on('message', (message) => {\r\n  console.log(message);\r\n  outputMessage(message);\r\n\r\n  // Scroll down\r\n  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n});\r\n\r\n// Message submit\r\nchatForm.addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n\r\n  // Get message text\r\n  let msg = e.target.elements.msg.value;\r\n\r\n  msg = msg.trim();\r\n\r\n  if (!msg) {\r\n    return false;\r\n  }\r\n\r\n  // Emit message to server\r\n  socket.emit('chatMessage', msg);\r\n\r\n  // Clear input\r\n  e.target.elements.msg.value = '';\r\n  e.target.elements.msg.focus();\r\n});\r\n\r\n// Output message to DOM\r\nfunction outputMessage(message) {\r\n  const div = document.createElement('div');\r\n  div.classList.add('message');\r\n  const p = document.createElement('p');\r\n  p.classList.add('meta');\r\n  p.innerText = message.username;\r\n  p.innerHTML += `<span>${message.time}</span>`;\r\n  div.appendChild(p);\r\n  const para = document.createElement('p');\r\n  para.classList.add('text');\r\n  para.innerText = message.text;\r\n  div.appendChild(para);\r\n  document.querySelector('.chat-messages').appendChild(div);\r\n}\r\n\r\n// Add room name to DOM\r\nfunction outputRoomName(room) {\r\n  roomName.innerText = room;\r\n}\r\n\r\n// Add users to DOM\r\nfunction outputUsers(users) {\r\n  userList.innerHTML = '';\r\n  users.forEach((user) => {\r\n    const li = document.createElement('li');\r\n    li.innerText = user.username;\r\n    userList.appendChild(li);\r\n  });\r\n}\r\n\r\n//Prompt the user before leave chat room\r\ndocument.getElementById('leave-btn').addEventListener('click', () => {\r\n  const leaveRoom = confirm('Want to leave the chatroom?');\r\n  if (leaveRoom) {\r\n    window.location = '../index.html';\r\n  } else {\r\n  }\r\n});"],"file":"main.dev.js"}